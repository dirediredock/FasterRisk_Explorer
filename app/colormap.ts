export const coolwarm = [
  "#3b4cc0",
  "#3b4cc0",
  "#3c4ec2",
  "#3c4ec2",
  "#3d50c3",
  "#3d50c3",
  "#3e51c5",
  "#3e51c5",
  "#3f53c6",
  "#3f53c6",
  "#4055c8",
  "#4055c8",
  "#4257c9",
  "#4257c9",
  "#4358cb",
  "#4358cb",
  "#445acc",
  "#445acc",
  "#455cce",
  "#455cce",
  "#465ecf",
  "#465ecf",
  "#485fd1",
  "#485fd1",
  "#4961d2",
  "#4961d2",
  "#4a63d3",
  "#4a63d3",
  "#4b64d5",
  "#4b64d5",
  "#4c66d6",
  "#4c66d6",
  "#4e68d8",
  "#4e68d8",
  "#4f69d9",
  "#4f69d9",
  "#506bda",
  "#506bda",
  "#516ddb",
  "#516ddb",
  "#536edd",
  "#536edd",
  "#5470de",
  "#5470de",
  "#5572df",
  "#5572df",
  "#5673e0",
  "#5673e0",
  "#5875e1",
  "#5875e1",
  "#5977e3",
  "#5977e3",
  "#5a78e4",
  "#5a78e4",
  "#5b7ae5",
  "#5b7ae5",
  "#5d7ce6",
  "#5d7ce6",
  "#5e7de7",
  "#5e7de7",
  "#5f7fe8",
  "#5f7fe8",
  "#6180e9",
  "#6180e9",
  "#6282ea",
  "#6282ea",
  "#6384eb",
  "#6384eb",
  "#6485ec",
  "#6485ec",
  "#6687ed",
  "#6687ed",
  "#6788ee",
  "#6788ee",
  "#688aef",
  "#688aef",
  "#6a8bef",
  "#6a8bef",
  "#6b8df0",
  "#6b8df0",
  "#6c8ff1",
  "#6c8ff1",
  "#6e90f2",
  "#6e90f2",
  "#6f92f3",
  "#6f92f3",
  "#7093f3",
  "#7093f3",
  "#7295f4",
  "#7295f4",
  "#7396f5",
  "#7396f5",
  "#7597f6",
  "#7597f6",
  "#7699f6",
  "#7699f6",
  "#779af7",
  "#779af7",
  "#799cf8",
  "#799cf8",
  "#7a9df8",
  "#7a9df8",
  "#7b9ff9",
  "#7b9ff9",
  "#7da0f9",
  "#7da0f9",
  "#7ea1fa",
  "#7ea1fa",
  "#80a3fa",
  "#80a3fa",
  "#81a4fb",
  "#81a4fb",
  "#82a6fb",
  "#82a6fb",
  "#84a7fc",
  "#84a7fc",
  "#85a8fc",
  "#85a8fc",
  "#86a9fc",
  "#86a9fc",
  "#88abfd",
  "#88abfd",
  "#89acfd",
  "#89acfd",
  "#8badfd",
  "#8badfd",
  "#8caffe",
  "#8caffe",
  "#8db0fe",
  "#8db0fe",
  "#8fb1fe",
  "#8fb1fe",
  "#90b2fe",
  "#90b2fe",
  "#92b4fe",
  "#92b4fe",
  "#93b5fe",
  "#93b5fe",
  "#94b6ff",
  "#94b6ff",
  "#96b7ff",
  "#96b7ff",
  "#97b8ff",
  "#97b8ff",
  "#98b9ff",
  "#98b9ff",
  "#9abbff",
  "#9abbff",
  "#9bbcff",
  "#9bbcff",
  "#9dbdff",
  "#9dbdff",
  "#9ebeff",
  "#9ebeff",
  "#9fbfff",
  "#9fbfff",
  "#a1c0ff",
  "#a1c0ff",
  "#a2c1ff",
  "#a2c1ff",
  "#a3c2fe",
  "#a3c2fe",
  "#a5c3fe",
  "#a5c3fe",
  "#a6c4fe",
  "#a6c4fe",
  "#a7c5fe",
  "#a7c5fe",
  "#a9c6fd",
  "#a9c6fd",
  "#aac7fd",
  "#aac7fd",
  "#abc8fd",
  "#abc8fd",
  "#adc9fd",
  "#adc9fd",
  "#aec9fc",
  "#aec9fc",
  "#afcafc",
  "#afcafc",
  "#b1cbfc",
  "#b1cbfc",
  "#b2ccfb",
  "#b2ccfb",
  "#b3cdfb",
  "#b3cdfb",
  "#b5cdfa",
  "#b5cdfa",
  "#b6cefa",
  "#b6cefa",
  "#b7cff9",
  "#b7cff9",
  "#b9d0f9",
  "#b9d0f9",
  "#bad0f8",
  "#bad0f8",
  "#bbd1f8",
  "#bbd1f8",
  "#bcd2f7",
  "#bcd2f7",
  "#bed2f6",
  "#bed2f6",
  "#bfd3f6",
  "#bfd3f6",
  "#c0d4f5",
  "#c0d4f5",
  "#c1d4f4",
  "#c1d4f4",
  "#c3d5f4",
  "#c3d5f4",
  "#c4d5f3",
  "#c4d5f3",
  "#c5d6f2",
  "#c5d6f2",
  "#c6d6f1",
  "#c6d6f1",
  "#c7d7f0",
  "#c7d7f0",
  "#c9d7f0",
  "#c9d7f0",
  "#cad8ef",
  "#cad8ef",
  "#cbd8ee",
  "#cbd8ee",
  "#ccd9ed",
  "#ccd9ed",
  "#cdd9ec",
  "#cdd9ec",
  "#cedaeb",
  "#cedaeb",
  "#cfdaea",
  "#cfdaea",
  "#d1dae9",
  "#d1dae9",
  "#d2dbe8",
  "#d2dbe8",
  "#d3dbe7",
  "#d3dbe7",
  "#d4dbe6",
  "#d4dbe6",
  "#d5dbe5",
  "#d5dbe5",
  "#d6dce4",
  "#d6dce4",
  "#d7dce3",
  "#d7dce3",
  "#d8dce2",
  "#d8dce2",
  "#d9dce1",
  "#d9dce1",
  "#dadce0",
  "#dadce0",
  "#dbdcde",
  "#dbdcde",
  "#dcdddd",
  "#dcdddd",
  "#dddcdc",
  "#dddcdc",
  "#dedcdb",
  "#dedcdb",
  "#dfdbd9",
  "#dfdbd9",
  "#e0dbd8",
  "#e0dbd8",
  "#e1dad6",
  "#e1dad6",
  "#e2dad5",
  "#e2dad5",
  "#e3d9d3",
  "#e3d9d3",
  "#e4d9d2",
  "#e4d9d2",
  "#e5d8d1",
  "#e5d8d1",
  "#e6d7cf",
  "#e6d7cf",
  "#e7d7ce",
  "#e7d7ce",
  "#e8d6cc",
  "#e8d6cc",
  "#e9d5cb",
  "#e9d5cb",
  "#ead5c9",
  "#ead5c9",
  "#ead4c8",
  "#ead4c8",
  "#ebd3c6",
  "#ebd3c6",
  "#ecd3c5",
  "#ecd3c5",
  "#edd2c3",
  "#edd2c3",
  "#edd1c2",
  "#edd1c2",
  "#eed0c0",
  "#eed0c0",
  "#efcfbf",
  "#efcfbf",
  "#efcebd",
  "#efcebd",
  "#f0cdbb",
  "#f0cdbb",
  "#f1cdba",
  "#f1cdba",
  "#f1ccb8",
  "#f1ccb8",
  "#f2cbb7",
  "#f2cbb7",
  "#f2cab5",
  "#f2cab5",
  "#f2c9b4",
  "#f2c9b4",
  "#f3c8b2",
  "#f3c8b2",
  "#f3c7b1",
  "#f3c7b1",
  "#f4c6af",
  "#f4c6af",
  "#f4c5ad",
  "#f4c5ad",
  "#f5c4ac",
  "#f5c4ac",
  "#f5c2aa",
  "#f5c2aa",
  "#f5c1a9",
  "#f5c1a9",
  "#f5c0a7",
  "#f5c0a7",
  "#f6bfa6",
  "#f6bfa6",
  "#f6bea4",
  "#f6bea4",
  "#f6bda2",
  "#f6bda2",
  "#f7bca1",
  "#f7bca1",
  "#f7ba9f",
  "#f7ba9f",
  "#f7b99e",
  "#f7b99e",
  "#f7b89c",
  "#f7b89c",
  "#f7b79b",
  "#f7b79b",
  "#f7b599",
  "#f7b599",
  "#f7b497",
  "#f7b497",
  "#f7b396",
  "#f7b396",
  "#f7b194",
  "#f7b194",
  "#f7b093",
  "#f7b093",
  "#f7af91",
  "#f7af91",
  "#f7ad90",
  "#f7ad90",
  "#f7ac8e",
  "#f7ac8e",
  "#f7aa8c",
  "#f7aa8c",
  "#f7a98b",
  "#f7a98b",
  "#f7a889",
  "#f7a889",
  "#f7a688",
  "#f7a688",
  "#f6a586",
  "#f6a586",
  "#f6a385",
  "#f6a385",
  "#f6a283",
  "#f6a283",
  "#f5a081",
  "#f5a081",
  "#f59f80",
  "#f59f80",
  "#f59d7e",
  "#f59d7e",
  "#f59c7d",
  "#f59c7d",
  "#f49a7b",
  "#f49a7b",
  "#f4987a",
  "#f4987a",
  "#f39778",
  "#f39778",
  "#f39577",
  "#f39577",
  "#f39475",
  "#f39475",
  "#f29274",
  "#f29274",
  "#f29072",
  "#f29072",
  "#f18f71",
  "#f18f71",
  "#f18d6f",
  "#f18d6f",
  "#f08b6e",
  "#f08b6e",
  "#f08a6c",
  "#f08a6c",
  "#ef886b",
  "#ef886b",
  "#ee8669",
  "#ee8669",
  "#ee8468",
  "#ee8468",
  "#ed8366",
  "#ed8366",
  "#ec8165",
  "#ec8165",
  "#ec7f63",
  "#ec7f63",
  "#eb7d62",
  "#eb7d62",
  "#ea7b60",
  "#ea7b60",
  "#e97a5f",
  "#e97a5f",
  "#e9785d",
  "#e9785d",
  "#e8765c",
  "#e8765c",
  "#e7745b",
  "#e7745b",
  "#e67259",
  "#e67259",
  "#e57058",
  "#e57058",
  "#e46e56",
  "#e46e56",
  "#e36c55",
  "#e36c55",
  "#e36b54",
  "#e36b54",
  "#e26952",
  "#e26952",
  "#e16751",
  "#e16751",
  "#e0654f",
  "#e0654f",
  "#df634e",
  "#df634e",
  "#de614d",
  "#de614d",
  "#dd5f4b",
  "#dd5f4b",
  "#dc5d4a",
  "#dc5d4a",
  "#da5a49",
  "#da5a49",
  "#d95847",
  "#d95847",
  "#d85646",
  "#d85646",
  "#d75445",
  "#d75445",
  "#d65244",
  "#d65244",
  "#d55042",
  "#d55042",
  "#d44e41",
  "#d44e41",
  "#d24b40",
  "#d24b40",
  "#d1493f",
  "#d1493f",
  "#d0473d",
  "#d0473d",
  "#cf453c",
  "#cf453c",
  "#cd423b",
  "#cd423b",
  "#cc403a",
  "#cc403a",
  "#cb3e38",
  "#cb3e38",
  "#ca3b37",
  "#ca3b37",
  "#c83836",
  "#c83836",
  "#c73635",
  "#c73635",
  "#c53334",
  "#c53334",
  "#c43032",
  "#c43032",
  "#c32e31",
  "#c32e31",
  "#c12b30",
  "#c12b30",
  "#c0282f",
  "#c0282f",
  "#be242e",
  "#be242e",
  "#bd1f2d",
  "#bd1f2d",
  "#bb1b2c",
  "#bb1b2c",
  "#ba162b",
  "#ba162b",
  "#b8122a",
  "#b8122a",
  "#b70d28",
  "#b70d28",
  "#b50927",
  "#b50927",
  "#b40426",
  "#b40426",
];

export const getColor = (
  currentValue: number,
  absoluteMaxValue: number
): string => {
  const midpoint = Math.floor(coolwarm.length / 2);

  if (currentValue < 0) {
    const index = Math.floor(
      midpoint - (midpoint * Math.abs(currentValue)) / absoluteMaxValue
    );
    return coolwarm[index];
  }

  if (currentValue > 0) {
    const index = Math.floor(
      midpoint + (midpoint * currentValue) / absoluteMaxValue
    );
    return coolwarm[index];
  }

  return coolwarm[midpoint];
};
